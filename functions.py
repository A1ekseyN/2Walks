import requests
import json
from colorama import Fore, Style
from datetime import datetime, timedelta

from api import steps_today_update, load_token_from_file
from adventure import Adventure
from bonus import equipment_bonus_stamina_steps, daily_steps_bonus, level_steps_bonus
from characteristics import char_characteristic
from locations import icon_loc
from settings import debug_mode
from skill_bonus import stamina_skill_bonus_def, speed_skill_equipment_and_level_bonus
from equipment_bonus import equipment_stamina_bonus, equipment_energy_max_bonus, equipment_speed_skill_bonus, equipment_luck_bonus
from level import CharLevel
from get_token_fitnes_api import get_access_token


def energy_time_charge():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
    # –ù—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ —Ñ–∞–π–ª functions.py
    global char_characteristic

    if char_characteristic['energy'] < char_characteristic['energy_max']:
        if timestamp_now() - char_characteristic['energy_time_stamp'] > speed_skill_equipment_and_level_bonus(60):
            # (–¢–µ—Å—Ç–∏—Ä—É–µ–º): –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å Speed bonus + Speed Equipment bonus
            # Bug: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –∏ –º–∏–Ω—É—Å–æ–≤–∞—Ç—å –µ–≥–æ –æ—Ç 'energy_time_stamp'
            # Bug: –ü–æ–ø—Ä–∞–≤–∏—Ç—å char_characteristic['energy'] += round (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ). –û—à–∏–±–∫–∞ –≤ –æ–∫—Ä—É–≥–ª–µ–Ω–∏–∏ 1.6, –æ–∫—Ä—É–≥–ª—è–µ—Ç –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É.
            char_characteristic['energy'] += round((timestamp_now() - char_characteristic['energy_time_stamp']) // speed_skill_equipment_and_level_bonus(60))
            char_characteristic['energy_time_stamp'] = timestamp_now() - ((timestamp_now() - char_characteristic['energy_time_stamp']) % speed_skill_equipment_and_level_bonus(60))
            if debug_mode:
                print('\n--- Energy Check!!! ---')
                print(f"–î–æ–±–∞–≤–ª–µ–Ω–æ energy: {round((timestamp_now() - char_characteristic['energy_time_stamp']) // speed_skill_equipment_and_level_bonus(60))}")
                print(f"–°—á—ë—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏: {round(timestamp_now() - char_characteristic['energy_time_stamp'])} sec.")

    if char_characteristic['energy'] > char_characteristic['energy_max']:
        char_characteristic['energy'] = char_characteristic['energy_max']

    if datetime.now().timestamp() - char_characteristic['energy_time_stamp'] >= speed_skill_equipment_and_level_bonus(60):
        char_characteristic['energy_time_stamp'] = datetime.now().timestamp()


def status_bar():
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: —à–∞–≥–æ–≤, —ç–Ω–µ—Ä–≥–∏–∏, –¥–µ–Ω–µ–≥.
    char_level_view = CharLevel(char_characteristic)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –∏ lvl up

    print(f'\nSteps üèÉ: {Fore.LIGHTCYAN_EX}{steps():,.0f} / {char_characteristic["steps_today"] + stamina_skill_bonus_def() + equipment_bonus_stamina_steps() + daily_steps_bonus() + level_steps_bonus():,.0f}{Style.RESET_ALL} '
          f'(Bonus: Stamina üèÉ: + {Fore.LIGHTCYAN_EX}{stamina_skill_bonus_def():,.0f}{Style.RESET_ALL} '
          f'/ Equipment üèÉ: + {Fore.LIGHTCYAN_EX}{equipment_bonus_stamina_steps():,.0f}{Style.RESET_ALL} '
          f'/ Daily üèÉ: {Fore.LIGHTCYAN_EX}{daily_steps_bonus()}{Style.RESET_ALL} '
          f'/ Level: {Fore.LIGHTCYAN_EX}{level_steps_bonus()}{Style.RESET_ALL}) '
          f'(Total steps used üèÉ: {Fore.LIGHTCYAN_EX}{char_characteristic["steps_total_used"]}{Style.RESET_ALL})'
          
          f'\nEnergy üîã: {Fore.GREEN}{char_characteristic["energy"]} / {char_characteristic["energy_max"]}{Style.RESET_ALL} '
          f'(Bonus: Equipment üîã: + {Fore.GREEN}{equipment_energy_max_bonus()}{Style.RESET_ALL} / '
          f'Daily üîã: + {Fore.GREEN}{char_characteristic["steps_daily_bonus"]}{Style.RESET_ALL} / '
          f'Level: + {Fore.GREEN}{char_characteristic["lvl_up_skill_energy_max"]}{Style.RESET_ALL})', end='')
    if debug_mode:
        print(f'(+ 1 —ç–Ω. —á–µ—Ä–µ–∑: {abs(speed_skill_equipment_and_level_bonus(60) - (timestamp_now() - char_characteristic["energy_time_stamp"])):,.0f} sec.)', end='')
    print(f'\nMoney üí∞: {Fore.LIGHTYELLOW_EX}{char_characteristic["money"]:,.0f}{Style.RESET_ALL} $.')

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Level –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ lvl up
    char_level_view.level_status_bar()

    print(f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ª–æ–∫–∞—Ü–∏–∏: {icon_loc()} {Fore.GREEN}{char_characteristic["loc"].title()}{Style.RESET_ALL}.')
    if char_characteristic['skill_training']:
        skill_end_time = char_characteristic["skill_training_time_end"] - datetime.fromtimestamp(datetime.now().timestamp())
        skill_end_time = str(skill_end_time).split('.')[0]
        print(f'\tüèã –£–ª—É—á—à–∞–µ–º –Ω–∞–≤—ã–∫ - {char_characteristic["skill_training_name"].title()} –¥–æ {Fore.LIGHTCYAN_EX}{char_characteristic[char_characteristic["skill_training_name"]] + 1}{Style.RESET_ALL} —É—Ä–æ–≤–Ω—è.'
              f'\n\tüïë –£–ª—É—á—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑: {Fore.LIGHTBLUE_EX}{skill_end_time}{Style.RESET_ALL}.')
    if char_characteristic['working']:
        work_end_time = char_characteristic["working_end"] - datetime.fromtimestamp(datetime.now().timestamp())
        work_end_time = str(work_end_time).split('.')[0]
        print(f'\tüè≠ –ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {char_characteristic["work"].title()} (üí∞: + {Fore.LIGHTYELLOW_EX}{char_characteristic["work_salary"] * char_characteristic["working_hours"]}{Style.RESET_ALL} $).'
              f'\n\tüïë –ö–æ–Ω–µ—Ü —Å–º–µ–Ω—ã —á–µ—Ä–µ–∑: {Fore.LIGHTBLUE_EX}{work_end_time}{Style.RESET_ALL}.')
    if char_characteristic['adventure']:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏.
        Adventure.adventure_check_done(self=None)


def save_game_date_last_enter():
    global char_characteristic
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–≥—Ä–æ–≤–æ–π –¥–∞—Ç—ã.
    # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ —à–∞–≥–æ–≤ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –¥–Ω—è.
    # –ï—Å–ª–∏ –≤—Ö–æ–¥ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –Ω–µ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ —à–∞–≥–æ–≤, —á–µ—Ä–µ–∑ API.
    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥ –±—ã–ª —Å–µ–≥–æ–¥–Ω—è, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç.

    # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    now_date = datetime.now().date()

    # –°—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
    with open('save.txt', 'r') as save_file:
        last_enter_date = save_file.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–ª—é—á 'date_last_enter'
    last_enter_date_char = char_characteristic.get('date_last_enter', None)
#    print(f"now_date: {now_date}, last_date_txt: {last_enter_date}, last_date_char_characteristic: {last_enter_date_char}")
#    print(f"char: {char_characteristic}")

    # –ù–æ–≤—ã–π –¥–µ–Ω—å
    if str(now_date) != str(last_enter_date_char):
#    if str(now_date) != last_enter_date:
        print(f"\nNew Day: {now_date}. –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥–∏ –∏ –±–æ–Ω—É—Å—ã.")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
        with open('save.txt', 'w') as save_file:
            save_file.write(str(now_date))

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞ —à–∞–≥–æ–≤, –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –∑–∞ –≤—á–µ—Ä–∞.
        # –ï—Å–ª–∏ –±–æ–ª–µ–µ 10–∫, —Ç–æ –¥–∞–µ—Ç—Å—è –±–æ–Ω—É—Å.
        today_steps_to_yesterday_steps()

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–ª-–≤–µ —à–∞–≥–æ–≤ –∑–∞ –¥–µ–Ω—å.
        steps_today_update()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        char_characteristic['steps_today_used'] = 0

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ –≤ –∫–ª—é—á–µ 'date_last_enter'
        char_characteristic['date_last_enter'] = str(now_date)

    # –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å
    elif str(now_date) == str(last_enter_date_char):
    #    elif str(now_date) == last_enter_date:
        # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞, –∏ –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É —Å–æ–≤–ø–∞–¥–∞–µ—Ç.
        # –ü–æ—Ö–æ–∂–µ, —á—Ç–æ —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–∞ –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∏–≥—Ä–æ–∫
        # –ù–æ, —ç—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
        char_characteristic['steps_can_use'] = char_characteristic['steps_today'] - char_characteristic['steps_today_used']
        char_characteristic['steps_can_use'] += stamina_skill_bonus_def()                   # –ë–æ–Ω—É—Å –æ—Ç –Ω–∞–≤—ã–∫–∞
        char_characteristic['steps_can_use'] += equipment_bonus_stamina_steps()             # –ë–æ–Ω—É—Å –æ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
        char_characteristic['steps_can_use'] += daily_steps_bonus()                         # –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —à–∞–≥–∏, –±–æ–ª–µ–µ 10–∫+ –≤ –¥–µ–Ω—å.
        char_characteristic['steps_can_use'] += level_steps_bonus()                         # –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–æ–∫–∞—á–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
    else:
        print('Error (save_game_date_last_enter).')
    return char_characteristic['steps_can_use']


def steps_today_update_manual():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —à–∞–≥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —á–µ—Ä–µ–∑ Fitness API (Google Fit)."""
    global steps_today_api
    global steps_today
    global char_characteristic

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ Fitness API
    token = None
    try:
        token = load_token_from_file()  # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞
    except AttributeError:
        print("–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ü–æ–ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ.")
        token = get_access_token()

    if not token:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è Fitness API.")
        steps_today = 401  # –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        char_characteristic['steps_today'] = 401
        return None

    # URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ Fitness API
    url = "https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate"

    # –í—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω (—Å –ø–æ–ª—É–Ω–æ—á–∏ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
    now = datetime.now()
    start_time = int(datetime(now.year, now.month, now.day).timestamp() * 1e9)  # –ü–æ–ª–Ω–æ—á—å —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –≤ –Ω–∞–Ω–æ—Å–µ–∫—É–Ω–¥–∞—Ö
    end_time = int(now.timestamp() * 1e9)  # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–∞–Ω–æ—Å–µ–∫—É–Ω–¥–∞—Ö

    body = {
        "aggregateBy": [{
            "dataTypeName": "com.google.step_count.delta",
            "dataSourceId": "derived:com.google.step_count.delta:com.google.android.gms:estimated_steps"
        }],
        "bucketByTime": {"durationMillis": 86400000},  # 1 –¥–µ–Ω—å
        "startTimeMillis": start_time // 1e6,  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
        "endTimeMillis": end_time // 1e6  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
    }

    headers = {
        "Authorization": f"Bearer {token}",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω
        "Content-Type": "application/json"
    }

    print('\nFitness API –∑–∞–ø—Ä–æ—Å –Ω–∞ Steps Update.')

    try:
        response = requests.post(url, headers=headers, json=body)

        if response.status_code == 401:  # –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫
            print("–¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫. –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å...")
            token = get_access_token()
            if not token:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω.")
                steps_today = 401  # –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                char_characteristic['steps_today'] = 401
                return None
            headers["Authorization"] = f"Bearer {token}"
            response = requests.post(url, headers=headers, json=body)  # –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å

        if response.status_code == 200:
            try:
                data = response.json()
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
                steps = data['bucket'][0]['dataset'][0]['point'][0]['value'][0]['intVal']
                steps_today = steps  # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
                char_characteristic['steps_today'] = steps  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                print(f"Steps Updated: {steps}")
                return steps
            except (IndexError, KeyError):
                print("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.")
                steps_today = 0  # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å–æ—Ö—Ä–∞–Ω—è–µ–º 0
                char_characteristic['steps_today'] = 0
                return steps_today
        else:
            print("–û—à–∏–±–∫–∞:", response.json())
            steps_today = 404  # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            return None
    except Exception as e:
        print('\n--- –û—à–∏–±–∫–∞ API —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–ª-–≤–µ —à–∞–≥–æ–≤ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ ---\n')
        steps_today = 404  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
        char_characteristic['steps_today'] = 404
        return None


def steps_today_update_manual_nocodeapi_old():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª-–≤–∞ —à–∞–≥–æ–≤ —á–µ—Ä–µ–∑ NoCodeAPI
    global steps_today_api
    global steps_today
    global char_characteristic      # –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–ª–∏ —Ç—É—Ç –Ω—É–∂–Ω–∞ —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è

    print('\nAPI –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–ª-–≤–µ —à–∞–≥–æ–≤.')

    try:
        url = "https://v1.nocodeapi.com/alexeyn/fit/kxgLPAuehlTGiEaC/aggregatesDatasets?dataTypeName=steps_count&timePeriod=today"
        params = {}
        r = requests.get(url=url, params=params)
        result_steps_today = r.json()
        steps_today = result_steps_today['steps_count'][0]['value']
        print('--- –ó–∞–ø—Ä–æ—Å NoCodeApi —É—Å–ø–µ—à–Ω—ã–π. ---\n')
        char_characteristic['steps_today'] = result_steps_today['steps_count'][0]['value']
        if debug_mode:
            print(f'Steps Update: {char_characteristic["steps_today"]}.')
        return char_characteristic['steps_today']
    except:
        print('\n--- –û—à–∏–±–∫–∞ API —Å–æ–µ–¥–Ω–∏–Ω–µ–Ω–∏—è. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–ª-–≤–µ —à–∞–≥–æ–≤ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ ---\n')
        # –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ß—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è steps_today –Ω–µ –Ω—É–∂–Ω–∞. –ò –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–ª—å–∫–æ –æ–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –æ—à–∏–±–∫–µ.
        steps_today = 404  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É, —Ç–æ–≥–¥–∞ —É–∫–∞–∑–∞–Ω–æ —á–∏—Å–ª–æ 404 –¥–ª—è —Ç–µ—Å—Ç–æ–≤.
        return steps_today


def char_info():
    # –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –ü–æ–∫–∞ —Å—é–¥–∞ –±—É–¥—É –¥–æ–±–∞–≤–ª—è—Ç—å –≤—Å–µ –ø–æ–¥—Ä—è–¥, –∞ –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ.
    print('\n################################')
    print('### –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ###')
    print('################################')
    print(f'- –ü—Ä–æ–π–¥–µ–Ω–æ —à–∞–≥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è üèÉ: {char_characteristic["steps_today"]:,.0f}')
    print(f'- –ü–æ—Ç—Ä–∞—á–µ–Ω–æ —à–∞–≥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è üèÉ: {char_characteristic["steps_today_used"]:,.0f}')

    print('\n### –ë–æ–Ω—É—Å—ã –∑–∞ –Ω–∞–≤—ã–∫–∏: ###')
    print(f'- –ó–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏ üîã: {char_characteristic["energy"]} —ç–¥.')
    print(f'- –ú–∞–∫—Å. –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏ üîã: {char_characteristic["energy_max"]} —ç–¥.')
    print(f'\n- –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: + {char_characteristic["stamina"]} % (+ {stamina_skill_bonus_def()} —à–∞–≥–æ–≤).')
    print(f'- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏: + {char_characteristic["energy_max_skill"]} —ç–Ω–µ—Ä–≥–∏–∏.')
    print(f'- –°–∫–æ—Ä–æ—Å—Ç—å: + {char_characteristic["speed_skill"]} %.')
    print(f'- –£–¥–∞—á–∞: + {char_characteristic["luck_skill"]} %.')

    print('\n### –ë–æ–Ω—É—Å—ã —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏: ###')
    print(f'\t- Stamina: + {equipment_stamina_bonus()} %'
          f'\n\t- Energy Max: + {equipment_energy_max_bonus()} —ç–¥.'
          f'\n\t- Speed: + {equipment_speed_skill_bonus()} %'
          f'\n\t- Luck: + {equipment_luck_bonus()} %')

    print(f'\n### –ë–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 10–∫+ —à–∞–≥–æ–≤:'
          f'\n\t- Steps: + {char_characteristic["steps_daily_bonus"]} %'
          f'\n\t- Energy Max: + {char_characteristic["steps_daily_bonus"]} —ç–¥.')

    print(f"\n### –ü—Ä–æ–∫–∞—á–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ –æ—Ç —É—Ä–æ–≤–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ###"
          f"\n\t- Stamina: {char_characteristic['lvl_up_skill_stamina']}"
          f"\n\t- Energy Max: {char_characteristic['lvl_up_skill_energy_max']}"
          f"\n\t- Speed Skill: {char_characteristic['lvl_up_skill_speed']}"
          f"\n\t- Luck: { char_characteristic['lvl_up_skill_luck']}")

    print('\n####################################')
    print('P.S. –°—é–¥–∞ —Ç–∞–∫ –∂–µ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–æ –º–µ—Ä–µ –∏—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–≥—Ä—É.')
    print('####################################')


# –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–ª–∏ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è, –≤–æ–æ–±—â–µ –Ω—É–∂–Ω–∞
def steps():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª-–≤–∞ —à–∞–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–π–¥–µ–Ω–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è.
    save_game_date_last_enter()
    return char_characteristic['steps_can_use']


def location_change_map():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É –ª–æ–∫–∞—Ü–∏—è–º–∏ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–µ.
    char_characteristic['energy'] -= 0              # 5 —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –º–µ–∂–¥—É –ª–æ–∫–∞—Ü–∏—è–º–∏.
    char_characteristic['steps_today_used'] += 0    # 150 —à–∞–≥–æ–≤, –≤–æ–∑–º–æ–∂–Ω–æ.


def timestamp_now():
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç TimeStamp –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.
    timestamp_now = datetime.now().timestamp()
    return timestamp_now


def energy_timestamp():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏.
    global char_characteristic
    char_characteristic['energy_time_stamp'] = datetime.now().timestamp()
    print('Energy TimeStamp Update - Function')
    return char_characteristic['energy_time_stamp']


def today_steps_to_yesterday_steps():
    # –ó–∞–ø–∏—Å—å —à–∞–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–π–¥–µ–Ω—ã –∑–∞ –≤—á–µ—Ä–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.
    # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞, –µ—Å–ª–∏ —à–∞–≥–æ–≤ –±–æ–ª–µ–µ 10–∫ –∑–∞ –≤—á–µ—Ä–∞. –ï—Å–ª–∏ —à–∞–≥–æ–≤ –º–µ–Ω—å—à–µ 10–∫, —Ç–æ –æ–±–Ω—É–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞.
    # Bug: –ö–æ–ª-–≤–æ —à–∞–≥–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º —à–∞–≥–∏ –∑–∞ –≤—á–µ—Ä–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.
    # Hot To Fix: –í —Ñ–∞–π–ª–µ characteristics.py –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —à–∞–≥–æ–≤ –∑–∞–ø—É—Å–∫–∞—Ç–µ—Å—è –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞.
    char_characteristic['steps_yesterday'] = char_characteristic['steps_today']

    if char_characteristic['steps_yesterday'] >= 10000:
        char_characteristic['steps_daily_bonus'] += 1
    else:
        char_characteristic['steps_daily_bonus'] = 0
    return char_characteristic['steps_yesterday'], char_characteristic['steps_daily_bonus']


#def load_token_from_file(file_path="token.json"):
#    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏–∑ —Ñ–∞–π–ª–∞ token.json."""
#    try:
#        with open(file_path, 'r') as file:
#            data = json.load(file)
#            return data.get('token')
#    except FileNotFoundError:
#        print(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
#        return None
#    except json.JSONDecodeError:
#        print("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON –∏–∑ —Ñ–∞–π–ª–∞.")
#        return None


if __name__ == "__main__":
    print(steps_today_update_manual())
    pass
