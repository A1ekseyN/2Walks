from characteristics import char_characteristic, save_characteristic
from datetime import datetime, timedelta
from settings import debug_mode
from colorama import Fore, Style
from functions_02 import time


work_requirements = {
    'watchman': {'steps': 200, 'energy': 4, 'salary': 2},
    'factory': {'steps': 500, 'energy': 7, 'salary': 5},
    'courier_foot': {'steps': 1000, 'energy': 10, 'salary': 10},
}


class Work():
    # –ö–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã

    def __init__(self, work, salary, working, working_hours, working_end, steps_can_use):
        self.work = work
        self.work_salary = salary
        self.working = working
        self.working_hours = working_hours
        self.working_end = working_end
        self.steps_can_use = steps_can_use

    def work_choise(self):
        print('\n--- üè≠ Work Location üè≠ ---')
        print(f'–í —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —É—Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É. '
              f'\n–û–ø–ª–∞—Ç–∞ –ø–æ—á–∞—Å–æ–≤–∞—è üïë: 1 —á–∞—Å = {time(round(60 - ((60 / 100) * char_characteristic["speed_skill"])))}')
        print('\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–∞–∫–∞–Ω—Å–∏–∏:'
              f'\n\t1. –°—Ç–æ—Ä–æ–∂ - üí∞: {Fore.LIGHTYELLOW_EX}2{Style.RESET_ALL} $ (üèÉ: 200 + üîã: 4).'
              f'\n\t2. –ó–∞–≤–æ–¥  - üí∞: {Fore.LIGHTYELLOW_EX}5{Style.RESET_ALL} $ (üèÉ: 500 + üîã: 7).'
              f'\n\t3. –ö—É—Ä—å–µ—Ä - üí∞: {Fore.LIGHTYELLOW_EX}10{Style.RESET_ALL} $ (üèÉ: 1000 + üîã: 10).'
              '\n\t0. –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.')
        try:
            working = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é, –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ:\n>>> ')
            if working == '1':
                work = 'watchman'
                Work.work_watchman(self)
                Work.ask_hours(self, work)
            elif working == '2':
                # –í–∞–∫–∞–Ω—Å–∏—è - –ó–∞–≤–æ–¥
                work = 'factory'
                Work.ask_hours(self, work)
            elif working == '3':
                # –í–∞–∫–∞–Ω—Å–∏—è - –ö—É—Ä—å–µ—Ä
                work = 'courier_foot'
                Work.ask_hours(self, work)
            elif working == '0':
                # –í—ã—Ö–æ–¥ –≤ –º–µ–Ω—é.
                pass
            else:
                print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
                Work.work_choise(self)
        except:
            print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            Work.work_choise(self)
        return working

    def ask_hours(self, work):
        # –°–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤
        try:
            print(f'\n–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—é: {Fore.GREEN}{work.title()}{Style.RESET_ALL} c –∑–∞—Ä–ø–ª–∞—Ç–æ–π: {Fore.LIGHTYELLOW_EX}{work_requirements[work]["salary"]}{Style.RESET_ALL} $ –≤ —á–∞—Å.')
            print(f'–û–ø–ª–∞—Ç–∞ –ø–æ—á–∞—Å–æ–≤–∞—è üïë: 1 —á–∞—Å = {time(round(60 - ((60 / 100) * char_characteristic["speed_skill"])))}')
            working_hours = abs(int(input('\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤: 1 - 8.\n0. –í—ã—Ö–æ–¥.\n>>> ')))
            if working_hours >= 1 and working_hours <= 8:
                Work.check_requirements(self, work, working_hours)
            elif working_hours == 0:
                Work.work_choise(self)
            else:
                print('\n–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1 - 8.')
                Work.ask_hours(self, work)
        except:
            print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            Work.ask_hours(self, work)

    def check_requirements(self, work, working_hours):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É.
        if working_hours >= 1:
            if char_characteristic['steps_can_use'] >= working_hours * work_requirements[work]["steps"] and char_characteristic['energy'] >= working_hours * work_requirements[work]["energy"]:
                char_characteristic['steps_today_used'] = char_characteristic['steps_today_used'] + (working_hours * work_requirements[work]["steps"])
                char_characteristic['energy'] = char_characteristic['energy'] - (working_hours * work_requirements[work]["energy"])
                char_characteristic['work'] = work
                char_characteristic['working'] = True
                char_characteristic['working_start'] = datetime.now().timestamp()
                char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + (timedelta(minutes=working_hours * 60) - ((timedelta(minutes=working_hours * 60) / 100) * char_characteristic['speed_skill']))
                char_characteristic['work_salary'] = work_requirements[work]['salary']
                char_characteristic['working_hours'] = working_hours

                print(f'\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ üèÉ: {Fore.LIGHTCYAN_EX}{working_hours * work_requirements[work]["steps"]}{Style.RESET_ALL} + '
                      f'üîã: {Fore.GREEN}{working_hours * work_requirements[work]["energy"]}{Style.RESET_ALL}.')
                print(f'–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã üïë: {time(working_hours * (round(60 - ((60 / 100) * char_characteristic["speed_skill"]))))}')
                print(f'–ó–∞—Ä–ø–ª–∞—Ç–∞ üí∞: {Fore.LIGHTYELLOW_EX}{working_hours * char_characteristic["work_salary"]}{Style.RESET_ALL} $.')
            else:
                print('–î–æ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á–µ–≥–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞.')
                print('–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ: üèÉ –∏–ª–∏ üîã')

    def work_watchman(self):
        # –†–∞–±–æ—Ç–∞ —Å—Ç–æ—Ä–æ–∂–µ–º
        pass

    def work_factory(self):
        # –†–∞–±–æ—Ç–∞ –Ω–∞ –∑–∞–≤–æ–¥–µ
        pass

    def work_courier_foot(self):
        # –†–∞–±–æ—Ç–∞ –ø–µ—à–∏–º –∫—É—Ä—å–µ—Ä–æ–º
        pass


def work_check_done():
    # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–æ–Ω—á–∞–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ —Ä–∞–±–æ—Ç—ã.
    global char_characteristic

    if char_characteristic['working_end'] != None:
        if debug_mode:
            if char_characteristic['working_end'] >= datetime.fromtimestamp(datetime.now().timestamp()):
                print('\n--- –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞ —Ä–∞–±–æ—Ç–µ ---.')

        if char_characteristic['working_end'] <= datetime.fromtimestamp(datetime.now().timestamp()):
            # –ö–æ–≥–¥–∞ –ø—Ä–æ—à–µ–ª –∫—É–ª–¥–∞—É–Ω –Ω–∞ —Ä–∞–±–æ—Ç—É. –î–∞–±–∞–≤–ª—è—é—Ç—Å—è –¥–µ–Ω—å–≥–∏ –∏ –æ–±–Ω—É–ª—è—é—Ç—Å—è —Ç–∞–π–º–µ—Ä—ã –∏ —Å—Ç–∞—Ç—É—Å—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–∞–±–æ—Ç–æ–π.
            char_characteristic['money'] += char_characteristic["work_salary"] * char_characteristic["working_hours"]
            print(f'\nüè≠ –í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–∞–±–æ—Ç—É –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: {Fore.LIGHTYELLOW_EX}{char_characteristic["work_salary"] * char_characteristic["working_hours"]}{Style.RESET_ALL} $.')
            # –û–±–Ω—É–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ä–∞–±–æ—Ç–æ–π. (–í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π).
            char_characteristic['work'] = None
            char_characteristic['work_salary'] = 0
            char_characteristic['working'] = False
            char_characteristic['working_hours'] = 0
            char_characteristic['working_start'] = None
            char_characteristic['working_end'] = None
            save_characteristic()       # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
    return char_characteristic


"""
def work_choice():
    # –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—Ç—ã.
    start_work_status()
    print(f'\n–í —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —É—Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É. '
          f'\n–û–ø–ª–∞—Ç–∞ –ø–æ—á–∞—Å–æ–≤–∞—è üïë: 1 —á–∞—Å = {time(round(60 - ((60 / 100) * char_characteristic["speed_skill"])))}')
    print('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–∞–∫–∞–Ω—Å–∏–∏:'
          f'\n\t1. –°—Ç–æ—Ä–æ–∂ - üí∞: {Fore.LIGHTYELLOW_EX}2{Style.RESET_ALL} $ (üèÉ: 200 + üîã: 4).'
          f'\n\t2. –ó–∞–≤–æ–¥  - üí∞: {Fore.LIGHTYELLOW_EX}5{Style.RESET_ALL} $ (üèÉ: 500 + üîã: 7).'
          f'\n\t3. –ö—É—Ä—å–µ—Ä - üí∞: {Fore.LIGHTYELLOW_EX}10{Style.RESET_ALL} $ (üèÉ: 1000 + üîã: 10).'
          '\n\t0. –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.')
    try:
        temp_number_work = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é, –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ:\n>>> ')
    except:
        print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        work_choice()

    if temp_number_work == '1':         # –°—Ç–æ—Ä–æ–∂
        work_watchman()
    elif temp_number_work == '2':       # –ó–∞–≤–æ–¥
        work_factory()
    elif temp_number_work == '3':       # –ö—É—Ä—å–µ—Ä
        work_courier_foot()
    elif temp_number_work == '0':       # –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
        # –¢—É—Ç –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é. –•–∑, –∏–ª–∏ –Ω—É–∂–Ω–æ.
        pass




def start_work_status():
    # –°—Ç–∞—Ä—Ç —Ä–∞–±–æ—Ç—ã. –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—é—é —Ä–∞–±–æ—Ç—É –∏ –µ–µ —Å—Ç–∞—Ç—É—Å.
    if char_characteristic['working'] and debug_mode:
        print('\nüè≠ --- –¢—É—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ä–∞–±–æ—Ç—ã –∏ –µ–µ —Å—Ç–∞—Ç—É—Å–∞ ---')
        print(f'–†–∞–±–æ—Ç–∞: {char_characteristic["work"].title()}.')
        print(f'–ù–∞—á–∞–ª–æ: {char_characteristic["working_start"]}.')
        print(f'–û–∫–æ–Ω—á–∞–Ω–∏–µ: {char_characteristic["working_end"]}.')
        print(f'–†–∞–±–æ—á–∏–µ —á–∞—Å—ã: {char_characteristic["working_hours"]}.')


def work_watchman():
    # –†–∞–±–æ—Ç–∞ - –°—Ç–æ—Ä–æ–∂
    print('\n--- –°—Ç–æ—Ä–æ–∂ ---\n–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤ —á–∞—Å: 2$. '
          '\n–î–ª—è 1 —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è: (üèÉ: 200 + üîã: 4).')
    if char_characteristic['working_hours'] == 0:
        try:
            char_characteristic['working_hours'] = abs(int(input('\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤: 1 - 8.'
                                  '\n0. –í—ã—Ö–æ–¥.\n>>> ')))
        except:
            print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            work_watchman()

        if char_characteristic['working_hours'] >= 1:
            if char_characteristic['steps_can_use'] >= char_characteristic['working_hours'] * 200 and char_characteristic['energy'] >= char_characteristic['working_hours'] * 4:
                char_characteristic['steps_today_used'] = char_characteristic['steps_today_used'] + (char_characteristic['working_hours'] * 200)
                char_characteristic['energy'] = char_characteristic['energy'] - (char_characteristic['working_hours'] * 4)
                char_characteristic['work'] = 'watchman'
                char_characteristic['working'] = True
                char_characteristic['working_start'] = datetime.now().timestamp()
                # char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + timedelta(hours=char_characteristic['working_hours'])
                char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + (timedelta(minutes=char_characteristic['working_hours'] * 60) - ((timedelta(minutes=char_characteristic['working_hours'] * 60) / 100) * char_characteristic['speed_skill']))
                char_characteristic['work_salary'] = 2
                print(f'\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: üèÉ: {char_characteristic["working_hours"] * 200}; üîã: {char_characteristic["working_hours"] * 4}.')
                print(f'–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {char_characteristic["working_hours"]} —á–∞—Å–∞.')
                print(f'–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {char_characteristic["working_end"]}.')

                start_work_status()
                return char_characteristic
            else:
                print('\n–£ –Ω–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üèÉ –∏–ª–∏ üîã.')
        elif char_characteristic['working_hours'] == 0:
            # –í—ã—Ö–æ–¥ –≤ –º–µ–Ω—é.
            pass
#        else:
#            work_watchman()
    else:
        print(f'\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç—ã, –≤—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ: {char_characteristic["work"]}.')
        print(f'–ö–æ–Ω–µ—Ü —Å–º–µ–Ω—ã —á–µ—Ä–µ–∑: {char_characteristic["working_end"] - datetime.fromtimestamp(datetime.now().timestamp())}.')
        print('–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã. (–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—è–≤–∏—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ).')


def work_factory():
    # –†–∞–±–æ—Ç–∞ - –ó–∞–≤–æ–¥
    print('\n--- –ó–∞–≤–æ–¥ ---\n–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤ —á–∞—Å: 5 $. '
          '\n–î–ª—è 1 —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è: (üèÉ: 500 + üîã: 7).')
    try:
        char_characteristic['working_hours'] = abs(int(input('\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤: 1 - 8.'
                              '\n0. –í—ã—Ö–æ–¥.\n>>> ')))
    except:
        print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        work_factory()

    if char_characteristic['working_hours'] >= 1:
        if char_characteristic['steps_can_use'] >= char_characteristic['working_hours'] * 500 and char_characteristic['energy'] >= char_characteristic['working_hours'] * 7:
            char_characteristic['steps_today_used'] = char_characteristic['steps_today_used'] + (char_characteristic['working_hours'] * 500)
            char_characteristic['energy'] = char_characteristic['energy'] - (char_characteristic['working_hours'] * 7)
            char_characteristic['work'] = 'factory'
            char_characteristic['working'] = True
            char_characteristic['working_start'] = datetime.now().timestamp()
#            char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + timedelta(hours=char_characteristic['working_hours'])
            char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + (timedelta(minutes=char_characteristic['working_hours'] * 60) - ((timedelta(minutes=char_characteristic['working_hours'] * 60) / 100) * char_characteristic['speed_skill']))
            char_characteristic['work_salary'] = 5
            print(f'\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: üèÉ: {char_characteristic["working_hours"] * 500}; üîã: {char_characteristic["working_hours"] * 7}.')
            print(f'–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {char_characteristic["working_hours"]} —á–∞—Å–∞.')
            print(f'–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {char_characteristic["working_end"]}.')

            start_work_status()
            return char_characteristic
        else:
            print('\n–£ –Ω–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üèÉ –∏–ª–∏ üîã.')
    elif char_characteristic['working_hours'] == 0:
        pass
    else:
        work_factory()


def work_courier_foot():
    # –†–∞–±–æ—Ç–∞ - –ö—É—Ä—å–µ—Ä (–ø–µ—à–∫–æ–º)
    print('\n--- –ö—É—Ä—å–µ—Ä ---\n–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤ —á–∞—Å: 10 $. '
          '\n–î–ª—è 1 —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è: (üèÉ: 1000 + üîã: 10).')
    try:
        char_characteristic['working_hours'] = abs(int(input('\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤: 1 - 8.'
                              '\n0. –í—ã—Ö–æ–¥.\n>>> ')))
    except:
        print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        work_courier_foot()

    if char_characteristic['working_hours'] >= 1:
        if char_characteristic['steps_can_use'] >= char_characteristic['working_hours'] * 1000 and char_characteristic['energy'] >= char_characteristic['working_hours'] * 10:
            char_characteristic['steps_today_used'] = char_characteristic['steps_today_used'] + (char_characteristic['working_hours'] * 1000)
            char_characteristic['energy'] = char_characteristic['energy'] - (char_characteristic['working_hours'] * 10)
            char_characteristic['work'] = 'courier_foot'
            char_characteristic['working'] = True
            char_characteristic['working_start'] = datetime.now().timestamp()
#            char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + timedelta(hours=char_characteristic['working_hours'])
            char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + (timedelta(minutes=char_characteristic['working_hours'] * 60) - ((timedelta(minutes=char_characteristic['working_hours'] * 60) / 100) * char_characteristic['speed_skill']))
            char_characteristic['work_salary'] = 10
            print(f'\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: üèÉ: {char_characteristic["working_hours"] * 1000}; üîã: {char_characteristic["working_hours"] * 10}.')
            print(f'–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {char_characteristic["working_hours"]} —á–∞—Å–∞.')
            print(f'–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {char_characteristic["working_end"]}.')

            start_work_status()
            return char_characteristic
        else:
            print('\n–£ –Ω–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üèÉ –∏–ª–∏ üîã.')
    elif char_characteristic['working_hours'] == 0:
        pass
    else:
        work_courier_foot()
"""