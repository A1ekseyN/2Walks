from characteristics import char_characteristic
from operator import itemgetter


def inventory_menu():
    print('\n--- üéí –ú–µ–Ω—é –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è üéí ---'
          f'\n–í—Å–µ–≥–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ - {len(char_characteristic["inventory"])} –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ')
    inventory_view()

    ask = input('\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è: '
                '\ns. Sold / –ü—Ä–æ–¥–∞—Ç—å'
                '\n0. –í—ã—Ö–æ–¥. '
                '\n>>> ')
    if ask == 's' or ask == '—ã' or ask == 'sold' or ask == '—ã—â–¥–≤':
        sold_item()
    elif ask == '0':
        pass
    else:
        inventory_menu()


def inventory_view():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è"""
    sorted_inventory = sorted(
        char_characteristic['inventory'],
        key=lambda x: (
            x.get('item_type', ''),
            x.get('characteristic', ''),
            -x.get('bonus', [0])[0]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        )
    )

    if not sorted_inventory:
        print(' - –ü—É—Å—Ç–æ')
    else:
        for ind, item in enumerate(sorted_inventory, start=1):
            print(f"\t{ind}. {item['item_type'][0].title()} {item['grade'][0]}, "
                  f"+ {item['bonus'][0]} {item['characteristic'][0].title()}, "
                  f"(Quality: {item['quality'][0]}), "
                  f"(Price: {item['price'][0]} $) ")

    return sorted_inventory


def sold_item():
    print('\n--- –ü—Ä–æ–¥–∞–∂–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: ---')
    print(f'–í—Å–µ–≥–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {len(char_characteristic["inventory"])} –ø—Ä–µ–¥–º–µ—Ç–æ–≤.')
    char_characteristic["inventory"] = inventory_view()

    try:
        item_to_sold = int(input(f'\t0. –ù–∞–∑–∞–¥'
                                 f'\n\n–ö–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å? (–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(char_characteristic["inventory"])}). \n>>> '))
        if item_to_sold <= len(char_characteristic["inventory"]) and item_to_sold != 0:
            item_index = item_to_sold - 1  # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–ø–∏—Å–∫—É
            item = char_characteristic["inventory"][item_index]

            print(f'\n–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç: '
                  f'\n\t- {item["item_type"][0].title()}, '
                  f'{item["grade"][0]}, '
                  f'+ {item["bonus"][0]} {item["characteristic"][0].title()}, '
                  f'(Quality: {item["quality"][0]}), '
                  f'(Price: {item["price"][0]} $) '
                  ### –¢—É—Ç –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞. 
                  f'\n\t- –¶–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ üí∞: {item["price"][0]} $')
            try:
                ask = input('\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç? '
                            '\n1. –î–∞'
                            '\n0. –ù–∞–∑–∞–¥ \n>>> ')
                if ask == '1':
                    print(f'\n–í—ã –ø—Ä–æ–¥–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç:'
                          f'\n\t- {item["item_type"][0].title()}, '
                          f'{item["grade"][0]}, '
                          f'+ {item["bonus"][0]} {item["characteristic"][0].title()}, '
                          f'(Quality: {item["quality"][0]}), '
                          f'(Price: {item["price"][0]} $) '
                          ### –¢—É—Ç –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞. 
                          f'\n\t- –¶–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ üí∞: {item["price"][0]} $')
                    try:  # –ï—Å–ª–∏ –Ω–µ—Ç —Ü–µ–Ω—ã —É –ø—Ä–µ–¥–º–µ—Ç–∞, —Ç–æ–≥–¥–∞ exception. –ò –ø—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª—è–µ—Ç—Å—è –±–µ–∑ –ø—Ä–∏–±—ã–ª–∏.
                        char_characteristic['money'] += round(char_characteristic['inventory'][item_index]['price'][0])
                    except:
                        print('–£ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç —Ü–µ–Ω—ã. –ü—Ä–æ–¥–∞–∂–∞ –∑–∞ 0 $.')
                    del char_characteristic["inventory"][item_index]
                    inventory_menu()
                elif ask == '0':
                    sold_item()
                else:
                    sold_item()
            except:
                sold_item()
        elif item_to_sold == 0:
            inventory_menu()
        else:
            sold_item()
    except:
        sold_item()

#inventory_menu()
