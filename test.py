from characteristics import char_characteristic
from datetime import datetime, timedelta
from colorama import Fore, Style
from functions_02 import time


work_requirements = {
    'watchman': {'steps': 200, 'energy': 4, 'salary': 2},
    'factory': {'steps': 500, 'energy': 7, 'salary': 5},
    'courier_foot': {'steps': 1000, 'energy': 10, 'salary': 10},
}


print(work_requirements['watchman']['steps'])
print(work_requirements['watchman']['salary'])


class Work():
    # –ö–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã

    def __init__(self, work, salary, working, working_hours, working_end, steps_can_use):
        self.work = work
        self.work_salary = salary
        self.working = working
        self.working_hours = working_hours
        self.working_end = working_end
        self.steps_can_use = steps_can_use

    def work_choise(self):
        print(f'\n–í —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —É—Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É. '
              f'\n–û–ø–ª–∞—Ç–∞ –ø–æ—á–∞—Å–æ–≤–∞—è üïë: 1 —á–∞—Å = {time(round(60 - ((60 / 100) * char_characteristic["speed_skill"])))}')
        print('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–∞–∫–∞–Ω—Å–∏–∏:'
              f'\n\t1. –°—Ç–æ—Ä–æ–∂ - üí∞: {Fore.LIGHTYELLOW_EX}2{Style.RESET_ALL} $ (üèÉ: 200 + üîã: 4).'
              f'\n\t2. –ó–∞–≤–æ–¥  - üí∞: {Fore.LIGHTYELLOW_EX}5{Style.RESET_ALL} $ (üèÉ: 500 + üîã: 7).'
              f'\n\t3. –ö—É—Ä—å–µ—Ä - üí∞: {Fore.LIGHTYELLOW_EX}10{Style.RESET_ALL} $ (üèÉ: 1000 + üîã: 10).'
              '\n\t0. –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.')
        try:
            working = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é, –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ:\n>>> ')
            if working == '1':
                work = 'watchman'
                Work.ask_hours(self, work)
            elif working == '2':
                # –í–∞–∫–∞–Ω—Å–∏—è - –ó–∞–≤–æ–¥
                work = 'factory'
                Work.ask_hours(self, work)
            elif working == '3':
                # –í–∞–∫–∞–Ω—Å–∏—è - –ö—É—Ä—å–µ—Ä
                work = 'courier_foot'
                Work.ask_hours(self, work)
            elif working == '0':
                # –í—ã—Ö–æ–¥ –≤ –º–µ–Ω—é.
                pass
        except:
            print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            Work.work_choise(self)
        return working

    def ask_hours(self, work):
        # –°–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤
        try:
            print(f'\n–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—é: {Fore.GREEN}{work.title()}{Style.RESET_ALL} c –∑–∞—Ä–ø–ª–∞—Ç–æ–π: {Fore.LIGHTYELLOW_EX}{work_requirements[work]["salary"]}{Style.RESET_ALL} $ –≤ —á–∞—Å.')
            print(f'–û–ø–ª–∞—Ç–∞ –ø–æ—á–∞—Å–æ–≤–∞—è üïë: 1 —á–∞—Å = {time(round(60 - ((60 / 100) * char_characteristic["speed_skill"])))}.')
            working_hours = abs(int(input('\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤: 1 - 8.\n0. –í—ã—Ö–æ–¥.\n>>> ')))
            if working_hours >= 1 and working_hours <= 8:
                Work.check_requirements(self, work, working_hours)
            elif working_hours == 0:
                pass
            else:
                print('\n–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1 - 8.')
                Work.ask_hours(self, work)
        except:
            print('\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            Work.ask_hours(self, work)

    def check_requirements(self, work, working_hours):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É.
        print('Check Requirements.')
        print(working_hours)
        if working_hours >= 1:
            print('Check #02.')
            print(f'Steps_can_use: {char_characteristic["steps_can_use"]}')
            print(f'Steps need: {working_hours * 200}')
            print(f'Energy: {char_characteristic["energy"]}')
            print(f'Energy Need: {working_hours * 4}')
            print(char_characteristic['steps_can_use'] >= working_hours * 200 and char_characteristic['energy'] >= working_hours * 4)

            if char_characteristic['steps_can_use'] >= working_hours * work_requirements[work]["steps"] and char_characteristic['energy'] >= working_hours * work_requirements[work]["energy"]:
                char_characteristic['steps_today_used'] = char_characteristic['steps_today_used'] + (working_hours * work_requirements[work]["steps"])
                char_characteristic['energy'] = char_characteristic['energy'] - (working_hours * work_requirements[work]["energy"])
                print('Check # 04')
                char_characteristic['work'] = work        # self.work
                print('Check # 05')
                char_characteristic['working'] = True
                char_characteristic['working_start'] = datetime.now().timestamp()
                char_characteristic['working_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + (timedelta(minutes=working_hours * 60) - ((timedelta(minutes=working_hours * 60) / 100) * char_characteristic['speed_skill']))
                char_characteristic['work_salary'] = work_requirements[work]["salary"]
                print(f'\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: üèÉ: {working_hours * work_requirements[work]["steps"]}; üîã: {working_hours * work_requirements[work]["energy"]}.')
                print(f'–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {working_hours * (time(round(60 - ((60 / 100) * char_characteristic["speed_skill"]))))}')
                print(f'–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {char_characteristic["working_end"]}.')
                Work.start_working(self)
            else:
                print('\nCheck #03')
                print('–î–æ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á–µ–≥–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ.')
                print('–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ: üèÉ –∏–ª–∏ üîã')

    def start_working(self):
        # –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
        print('Start Working')

    def work_watchman(self):
        # –†–∞–±–æ—Ç–∞ —Å—Ç–æ—Ä–æ–∂–µ–º
        print('\nüè≠\n--- –°—Ç–æ—Ä–æ–∂ ---\n–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤ —á–∞—Å: 2$. '
              '\n–î–ª—è 1 —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è: (üèÉ: 200 + üîã: 4).')

    def work_factory(self):
        # –†–∞–±–æ—Ç–∞ –Ω–∞ –∑–∞–≤–æ–¥–µ
        pass

    def work_courier_foot(self):
        # –†–∞–±–æ—Ç–∞ –ø–µ—à–∏–º –∫—É—Ä—å–µ—Ä–æ–º
        pass


Work.work_choise(self=None)

#char_characteristic['work'], char_characteristic['work_salary'], char_characteristic['working'],
#                 char_characteristic['working_hours'], char_characteristic['working_end'],
