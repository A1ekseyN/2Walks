from operator import itemgetter
from characteristics import char_characteristic
from inventory import inventory_view


class Equipment():
    """–ö–ª–∞—Å –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –æ–¥–µ—Ç—ã—Ö –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ"""

    def equipment_view(self):
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–¥–µ—Ç—ã –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ.
        print('\n--- üéí –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üéí ---')
        if char_characteristic['equipment_head'] == None and char_characteristic['equipment_neck'] == None and \
            char_characteristic['equipment_torso'] == None and char_characteristic['equipment_finger_01'] == None and \
            char_characteristic['equipment_finger_02'] == None and char_characteristic['equipment_legs'] == None and \
            char_characteristic['equipment_foots'] == None:
            print('\n–ù–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ –Ω–µ—Ç –≤–µ—â–µ–π: ')

        if char_characteristic['equipment_head'] != None:
            print(f'1. –ì–æ–ª–æ–≤–∞:            {char_characteristic["equipment_head"]["item_name"][0].title()} {char_characteristic["equipment_head"]["grade"][0].title()}: + {char_characteristic["equipment_head"]["bonus"][0]} {char_characteristic["equipment_head"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_head"]["quality"][0]:,.2f})')
        elif char_characteristic['equipment_head'] == None:
            print('1. –ì–æ–ª–æ–≤–∞:            –ù–µ—Ç –æ–¥–µ–∂–¥—ã')

        if char_characteristic['equipment_neck'] != None:
            print(f'2. –®–µ—è:               {char_characteristic["equipment_neck"]["item_name"][0].title()} {char_characteristic["equipment_neck"]["grade"][0].title()}: + {char_characteristic["equipment_neck"]["bonus"][0]} {char_characteristic["equipment_neck"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_neck"]["quality"][0]:,.2f})')
        elif char_characteristic['equipment_neck'] == None:
            print('2. –®–µ—è:               –ù–µ—Ç –æ–¥–µ–∂–¥—ã')

        if char_characteristic['equipment_torso'] != None:
            print(f'3. –¢–æ—Ä—Å:              {char_characteristic["equipment_torso"]["item_name"][0].title()} {char_characteristic["equipment_torso"]["grade"][0].title()}: + {char_characteristic["equipment_torso"]["bonus"][0]} {char_characteristic["equipment_torso"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_torso"]["quality"][0]:,.2f})')
        elif char_characteristic['equipment_torso'] == None:
            print('3. –¢–æ—Ä—Å:              –ù–µ—Ç –æ–¥–µ–∂–¥—ã')

        if char_characteristic['equipment_finger_01'] != None:
            print(f'4. –ü–∞–ª–µ—Ü –ª–µ–≤–æ–π —Ä—É–∫–∏:  {char_characteristic["equipment_finger_01"]["item_name"][0].title()} {char_characteristic["equipment_finger_01"]["grade"][0].title()}: + {char_characteristic["equipment_finger_01"]["bonus"][0]} {char_characteristic["equipment_finger_01"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_finger_01"]["quality"][0]:,.2f})')
        elif char_characteristic['equipment_finger_01'] == None:
            print('4. –ü–∞–ª–µ—Ü –ª–µ–≤–æ–π —Ä—É–∫–∏:  –ù–µ—Ç –∫–æ–ª—å—Ü–∞')

        if char_characteristic['equipment_finger_02'] != None:
            print(f'5. –ü–∞–ª–µ—Ü –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏: {char_characteristic["equipment_finger_02"]["item_name"][0].title()} {char_characteristic["equipment_finger_02"]["grade"][0].title()}: + {char_characteristic["equipment_finger_02"]["bonus"][0]} {char_characteristic["equipment_finger_02"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_finger_02"]["quality"][0]:,.2f})')
        elif char_characteristic['equipment_finger_02'] == None:
            print('5. –ü–∞–ª–µ—Ü –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏: –ù–µ—Ç –∫–æ–ª—å—Ü–∞')

#        if char_characteristic['equipment_legs'] != None:
#            print(f'6. –ù–æ–≥–∏:              {char_characteristic["equipment_legs"]["item_name"][0].title()} {char_characteristic["equipment_legs"]["grade"][0].title()}: + {char_characteristic["equipment_legs"]["bonus"][0]} {char_characteristic["equipment_legs"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_legs"]["quality"][0]:,.2f})')
#        elif char_characteristic['equipment_legs'] == None:
#            print('6. –ù–æ–≥–∏:              –ù–µ—Ç –æ–¥–µ–∂–¥—ã')

        if char_characteristic['equipment_foots'] != None:
            print(f'6. –°—Ç—É–ø–Ω–∏:            {char_characteristic["equipment_foots"]["item_name"][0].title()} {char_characteristic["equipment_foots"]["grade"][0].title()}: + {char_characteristic["equipment_foots"]["bonus"][0]} {char_characteristic["equipment_foots"]["characteristic"][0].title()} (Quality: {char_characteristic["equipment_foots"]["quality"][0]:,.2f})')
        elif char_characteristic['equipment_foots'] == None:
            print('6. –°—Ç—É–ø–Ω–∏:            –ù–µ—Ç –æ–±—É–≤–∏')

        print('0. –ù–∞–∑–∞–¥')
        Equipment.equipment_change(self)

    def equipment_change(self):
        # –ú–µ–Ω—è–µ—Ç –æ–¥–µ–∂–¥—É –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
        try:
            ask = input('\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –æ–¥–µ–∂–¥—É –∏–ª–∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫—É: \n>>> ')
            if ask == '1':
                item_name = '–≥–æ–ª–æ–≤–∞'
                item_type = 'helmet'
                item_slot = 'equipment_head'
                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
            elif ask == '2':
                item_name = '—à–µ—è'
                item_type = 'necklace'
                item_slot = 'equipment_neck'
                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
            elif ask == '3':
                item_name = '—Ç–æ—Ä—Å'
                item_type = 't-shirt'
                item_slot = 'equipment_torso'
                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
            elif ask == '4':
                item_name = '–ø–∞–ª–µ—Ü –ª–µ–≤–æ–π —Ä—É–∫–∏'
                item_type = 'ring'
                item_slot = 'equipment_finger_01'
                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
            elif ask == '5':
                item_name = '–ø–∞–ª–µ—Ü –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏'
                item_type = 'ring'
                item_slot = 'equipment_finger_02'
                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
#            elif ask == '6':
#                item_name = None
#                item_type = None
#                item_slot = None
#                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
            elif ask == '6':
                item_name = '—Å—Ç—É–ø–Ω–∏'
                item_type = 'shoes'
                item_slot = 'equipment_foots'
                Equipment.equipment_change_item_in_slot(self, item_name=item_name, item_type=item_type, item_slot=item_slot)
            elif ask == '0':
                pass
            else:
                Equipment.equipment_change(self)
        except:
            Equipment.equipment_change(self)

    def equipment_change_item_in_slot(self, item_name, item_type, item_slot):
        cnt = 0
        list_cnt = []

        if char_characteristic[item_slot] == None:
            print(f'\n{item_name.title()} - –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–µ—Ç–æ.')
        elif char_characteristic[item_slot] != None:
            print(f'\n–ù–∞ {item_name} —É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞–¥–µ—Ç–æ: '
                  f'\n- {char_characteristic[item_slot]["item_name"][0].title()} {char_characteristic[item_slot]["grade"][0].title()}: + {char_characteristic[item_slot]["bonus"][0]} {char_characteristic[item_slot]["characteristic"][0].title()} (Quality: {char_characteristic[item_slot]["quality"][0]:,.2f})')

        print(f'\n–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –∏–º–µ—é—Ç—Å—è –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —ç–∫–∏–ø–∏—Ä–æ–≤–∞—Ç—å: ')

        ### –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.
        # –ù—É–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –æ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ–∫–∞, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç.
        char_characteristic['inventory'] = sorted(char_characteristic['inventory'],
                                                  key=lambda x: (x['item_type'], x['characteristic'], x['bonus']),
                                                  reverse=True)

        for i in char_characteristic['inventory']:
            cnt += 1
            if i["item_type"][0] == item_type:
                print(f'{cnt}. {i["item_name"][0].title()} {i["grade"][0]}: + {i["bonus"][0]} {i["characteristic"][0].title()} (Quality: {i["quality"][0]:,.2f})')
                list_cnt.append(cnt)

        print('\n0. –ù–∞–∑–∞–¥'
              '\n99. –°–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏')

        Equipment.change_item_in_slot(self, item_name, item_type, item_slot, list_cnt=list_cnt)

    def change_item_in_slot(self, item_name, item_type, item_slot, list_cnt):
        # –ó–∞–º–µ–Ω—è–µ—Ç –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏.
        try:
            index = int(input('\n>>> '))
            if index in list_cnt:
                print(f'\n–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç:'
                      f'\n- {char_characteristic["inventory"][index - 1]["item_name"][0].title()} {char_characteristic["inventory"][index - 1]["grade"][0].title()}: + {char_characteristic["inventory"][index - 1]["bonus"][0]} {char_characteristic["inventory"][index - 1]["characteristic"][0].title()} (Quality: {char_characteristic["inventory"][index - 1]["quality"][0]:,.2f}).')
                try:
                    ask = input('\n–ù–∞–¥–µ—Ç—å —ç–ª–µ–º–µ–Ω—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: \n1. –î–∞\n0. –ù–∞–∑–∞–¥ \n>>> ')
                    if ask == '1':
                        temp_item = None
                        if char_characteristic[item_slot] != None:
                            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ —Å–ª–æ—Ç —Å–≤–æ–±–æ–¥–Ω—ã–π
                            temp_item = char_characteristic[item_slot]

                        char_characteristic[item_slot] = char_characteristic['inventory'][index - 1]
                        del char_characteristic['inventory'][index - 1]

                        print('\n–í—ã –Ω–∞–¥–µ–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: ')
                        print(f'- {char_characteristic[item_slot]["item_name"][0].title()} {char_characteristic[item_slot]["grade"][0].title()}: + {char_characteristic[item_slot]["bonus"][0]} {char_characteristic[item_slot]["characteristic"][0].title()} (Quality: {char_characteristic[item_slot]["quality"][0]:,.2f})')

                        if temp_item:
                            char_characteristic['inventory'].append(temp_item)
                            print('\n–í—ã –∑–∞–º–µ–Ω–∏–ª–∏ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –Ω–∞ –¥—Ä—É–≥–æ–π.')

                        Equipment.equipment_view(self=None)
                    else:
                        Equipment.equipment_change_item_in_slot(self, item_name, item_type, item_slot)
                except:
                    print('–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã —á–∞—Å—Ç–∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏.')
                    Equipment.change_item_in_slot(self, item_name, item_type, item_slot, list_cnt)

            elif index == 0:
                Equipment.equipment_view(self=None)
            elif index == 99:
                # –°–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏.
                print(f'\n–í—ã —Å–Ω—è–ª–∏ –ø—Ä–µ–¥–º–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏: '
                      f'\n- {char_characteristic[item_slot]["item_name"][0].title()} {char_characteristic[item_slot]["grade"][0].title()}: + {char_characteristic[item_slot]["bonus"][0]} {char_characteristic[item_slot]["characteristic"][0].title()} (Quality: {char_characteristic[item_slot]["quality"][0]})')
                char_characteristic['inventory'].append(char_characteristic[item_slot])
                char_characteristic[item_slot] = None
            else:
                print('\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ: ')
                Equipment.equipment_change_item_in_slot(self, item_name, item_type, item_slot)
        except:
            print('\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')
            Equipment.equipment_change_item_in_slot(self, item_name, item_type, item_slot)

    def inventory_view(self):
        print(f'\n–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è {len(char_characteristic["inventory"])} –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ')
        inventory_view()

#Equipment.equipment_view(self=None)
