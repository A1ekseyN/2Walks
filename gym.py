from datetime import datetime, timedelta
from characteristics import char_characteristic, skill_training_table, save_characteristic, get_energy_training_data
from settings import debug_mode
from colorama import Fore, Style
from skill_bonus import stamina_skill_bonus, stamina_skill_bonus_def
from functions_02 import time
from equipment_bonus import equipment_speed_skill_bonus, equipment_energy_max_bonus
from bonus import apply_move_optimization_gym
from inventory import Wear_Equipped_Items


lvl_up_stamina = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["stamina"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                 f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["stamina"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                 f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["stamina"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                 f'üïë: {time(round(skill_training_table[char_characteristic["stamina"] + 1]["time"] - ((skill_training_table[char_characteristic["stamina"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'
lvl_up_energy_max = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(get_energy_training_data(char_characteristic["energy_max"] - 49 - equipment_energy_max_bonus() - char_characteristic["steps_daily_bonus"])["steps"]):,.0f}{Style.RESET_ALL} / ' \
                    f'üîã: {Fore.GREEN}{get_energy_training_data(char_characteristic["energy_max"] - 49 - equipment_energy_max_bonus() - char_characteristic["steps_daily_bonus"])["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                    f'üí∞: {Fore.LIGHTYELLOW_EX}{get_energy_training_data(char_characteristic["energy_max"] - 49 - equipment_energy_max_bonus() - char_characteristic["steps_daily_bonus"])["money"]}{Style.RESET_ALL} $ / ' \
                    f'üïë: {time(round(get_energy_training_data(char_characteristic["energy_max"] - 49 - equipment_energy_max_bonus() - char_characteristic["steps_daily_bonus"])["time"] - ((get_energy_training_data(char_characteristic["energy_max"] - 49 - equipment_energy_max_bonus() - char_characteristic["steps_daily_bonus"])["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'
lvl_up_speed_skill = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["speed_skill"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                     f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["speed_skill"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                     f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["speed_skill"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                     f'üïë: {time(round(skill_training_table[char_characteristic["speed_skill"] + 1]["time"] - ((skill_training_table[char_characteristic["speed_skill"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'
lvl_up_luck_skill = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["luck_skill"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                     f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["luck_skill"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                     f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["luck_skill"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                     f'üïë: {time(round(skill_training_table[char_characteristic["luck_skill"] + 1]["time"] - ((skill_training_table[char_characteristic["luck_skill"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'

lvl_up_move_optimization_adventure = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["move_optimization_adventure"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                                     f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["move_optimization_adventure"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                                     f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["move_optimization_adventure"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                                     f'üïë: {time(round(skill_training_table[char_characteristic["move_optimization_adventure"] + 1]["time"] - ((skill_training_table[char_characteristic["move_optimization_adventure"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'
lvl_up_move_optimization_gym = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["move_optimization_gym"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                               f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["move_optimization_gym"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                               f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["move_optimization_gym"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                               f'üïë: {time(round(skill_training_table[char_characteristic["move_optimization_gym"] + 1]["time"] - ((skill_training_table[char_characteristic["move_optimization_gym"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'
lvl_up_move_optimization_work = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["move_optimization_work"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                                f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["move_optimization_work"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                                f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["move_optimization_work"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                                f'üïë: {time(round(skill_training_table[char_characteristic["move_optimization_work"] + 1]["time"] - ((skill_training_table[char_characteristic["move_optimization_work"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'

lvl_up_neatness_in_using_things = f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[char_characteristic["neatness_in_using_things"] + 1]["steps"]):,.0f}{Style.RESET_ALL} / ' \
                                 f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["neatness_in_using_things"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
                                 f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["neatness_in_using_things"] + 1]["money"]}{Style.RESET_ALL} $ / ' \
                                 f'üïë: {time(round(skill_training_table[char_characteristic["neatness_in_using_things"] + 1]["time"] - ((skill_training_table[char_characteristic["neatness_in_using_things"] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'


description_stamina = f'\n–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {Fore.GREEN}{char_characteristic["stamina"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.' \
                      f'\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å, –Ω–∞ 1 % –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —à–∞–≥–æ–≤ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –¥–Ω—è.' \
                      f'\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –¥–æ {Fore.GREEN}{char_characteristic["stamina"] + 1}{Style.RESET_ALL} —É—Ä–æ–≤–Ω—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_stamina}).'

description_energy_max = f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏: {Fore.GREEN}{char_characteristic["energy_max_skill"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.' \
                         f'\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å, –¥–æ–±–∞–≤–ª—è–µ—Ç + 1 –µ–¥–∏–Ω–∏—Ü—É –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∑–∞–ø–∞—Å—É —ç–Ω–µ—Ä–≥–∏–∏.' \
                         f'\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_energy_max}).'

description_speed = f'\n–°–∫–æ—Ä–æ—Å—Ç—å: {Fore.GREEN}{char_characteristic["speed_skill"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.' \
                    f'\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–±–∞–≤–ª—è–µ—Ç + 1% –∫ –æ–±—â–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –í–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É, –ø—Ä–æ–∫–∞—á–∫—É –Ω–∞–≤—ã–∫–æ–≤, –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π.' \
                    f'\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_speed_skill}).'

description_luck = f'\n–£–¥–∞—á–∞: {Fore.GREEN}{char_characteristic["luck_skill"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.' \
                   f'\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —É–¥–∞—á–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ 1%.' \
                   f'\n–£–¥–∞—á–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∞ —Ç–∞–∫ –∂–µ –Ω–∞ –∏—Ö –∫–∞—á–µ—Å—Ç–≤–æ.' \
                   f'\n–¢–∞–∫ –∂–µ, —É–¥–∞—á–∞ –≤–ª–∏—è–µ—Ç –∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è.' \
                   f'\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_luck_skill}).'

description_move_optimization_adventure = f'\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Adventure: {Fore.GREEN}{char_characteristic["move_optimization_adventure"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.' \
                                          f'\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1 % –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.' \
                                          f'\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_move_optimization_adventure})'

description_move_optimization_gym = f"\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Gym: {Fore.GREEN}{char_characteristic['move_optimization_gym']}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å." \
                                    f"\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1 % –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏." \
                                    f"\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_move_optimization_gym})"

description_move_optimization_work = f"\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Work: {Fore.GREEN}{char_characteristic['move_optimization_work']}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å." \
                                     f"\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1 % –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏." \
                                     f"\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_move_optimization_work})"

description_neatness_in_using_things = f"\n–ê–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤–µ—â–µ–π: {Fore.GREEN}{char_characteristic['neatness_in_using_things']}{Style.RESET_ALL}. " \
                                       f"\n–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞ —É–º–µ–Ω—å—à–∞–µ—Ç –∏–∑–Ω–æ—Å –≤–µ—â–µ–π –Ω–∞ 1 %. " \
                                       f"\n\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_neatness_in_using_things})" \


def gym_menu():
    # –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –Ω–∞–≤—ã–∫–∞ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏.
    global char_characteristic
    print('\nüèã --- –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ª–æ–∫–∞—Ü–∏–∏ - –°–ø–æ—Ä—Ç–∑–∞–ª. --- üèã')

    if char_characteristic['skill_training']:
        print(f'\tüèã –£–ª—É—á—à–∞–µ–º –Ω–∞–≤—ã–∫ - {char_characteristic["skill_training_name"].title()} –¥–æ {Fore.LIGHTCYAN_EX}{char_characteristic[char_characteristic["skill_training_name"]] + 1}{Style.RESET_ALL} —É—Ä–æ–≤–Ω—è.'
              f'\n\tüïë –£–ª—É—á—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑: {Fore.CYAN}{char_characteristic["skill_training_time_end"] - datetime.fromtimestamp(datetime.now().timestamp())}{Style.RESET_ALL}.')
    else:
        skill_options = {
            '1': ('stamina', 'Stamina:    ', char_characteristic['stamina'] + 1),
            '2': ('energy_max', 'Energy Max: ',
                  char_characteristic['energy_max'] - 49 - equipment_energy_max_bonus() - char_characteristic[
                      'steps_daily_bonus']),
            '3': ('speed_skill', 'Speed:      ', char_characteristic['speed_skill'] + 1),
            '4': ('luck_skill', 'Luck:       ', char_characteristic['luck_skill'] + 1),
            '5': ('move_optimization_adventure', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Adventure:   ', char_characteristic['move_optimization_adventure'] + 1),
            '6': ('move_optimization_gym', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Gym:         ', char_characteristic['move_optimization_gym'] + 1),
            '7': ('move_optimization_work', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Work:        ', char_characteristic['move_optimization_work'] + 1),
            '8': ('neatness_in_using_things', '–ê–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ—â–µ–π: ', char_characteristic['neatness_in_using_things'] + 1)
        }

        print(f"Steps üèÉ: {char_characteristic['steps_can_use']}, "
              f"Energy üîã: {char_characteristic['energy']}, "
              f"Money üí∞: {char_characteristic['money']} $.")
        print('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å: ')
        for key, (skill, name, level) in skill_options.items():
            print(f'\t{key}. {name}{Fore.LIGHTCYAN_EX}{level}{Style.RESET_ALL} lvl ({get_lvl_up_info(skill, level)})')
        print('\n\t0. –ù–∞–∑–∞–¥.')

        try:
            temp_number = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π –Ω–∞–≤—ã–∫ —É–ª—É—á—à–∏—Ç—å: \n>>> ')
            if temp_number == '0':
                return
            elif temp_number in skill_options:
                skill_name, skill_display_name, level = skill_options[temp_number]

                # –í—ã–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–≤—ã–∫–∞
                display_skill_description(skill_name)

                ask = input(f'\t1. –ü–æ–≤—ã—Å–∏—Ç—å {skill_display_name.strip()} + 1.'
                            f'\n\t0. –ù–∞–∑–∞–¥\n>>> ')
                if ask == '1':
                    char_characteristic['skill_training_name'] = skill_name
                    skill_training = Skill_Training(training=True, name=skill_name, timestamp=None, time_end=None,
                                                    time_stamp_now=None)

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
                    if skill_training.check_requirements():
                        # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–∫–∞—á–∫–∏ –Ω–∞–≤—ã–∫–∞
                        skill_training.start_skill_training()

                        # –ò–∑–Ω–æ—Å –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∏
                        steps = apply_move_optimization_gym(skill_training_table[char_characteristic[skill_name] + 1]["steps"])
                        equipped_items_manager = Wear_Equipped_Items()
                        equipped_items_manager.decrease_durability(steps)


                    else:
                        gym_menu()
                else:
                    gym_menu()
            else:
                gym_menu()
        except Exception as error:
            print(f'\n–û—à–∏–±–∫–∞ Gym: {error}')
            gym_menu()


def get_lvl_up_info(skill_name, level):
    return f'üèÉ: {Fore.LIGHTCYAN_EX}{apply_move_optimization_gym(skill_training_table[level]["steps"]):,.0f}{Style.RESET_ALL} / ' \
           f'üîã: {Fore.GREEN}{skill_training_table[level]["energy"]}{Style.RESET_ALL} —ç–Ω. / ' \
           f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[level]["money"]}{Style.RESET_ALL} $ / ' \
           f'üïë: {time(round(skill_training_table[level]["time"] - ((skill_training_table[level]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}'


def display_skill_description(skill_name):
    # –í—ã–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–≤—ã–∫–∞
    if skill_name == 'stamina':
        print(description_stamina)
    elif skill_name == 'energy_max':
        print(description_energy_max)
    elif skill_name == 'speed_skill':
        print(description_speed)
    elif skill_name == 'luck_skill':
        print(description_luck)
    elif skill_name == 'move_optimization_adventure':
        print(description_move_optimization_adventure)
    elif skill_name == 'move_optimization_gym':
        print(description_move_optimization_gym)
    elif skill_name == 'move_optimization_work':
        print(description_move_optimization_work)
    elif skill_name == 'neatness_in_using_things':
        print(description_neatness_in_using_things)


def start_training():
    char_characteristic['skill_training'] = True
    char_characteristic['skill_training_timestamp'] = datetime.now().timestamp()
    skill_name = char_characteristic['skill_training_name']
    level = char_characteristic[skill_name] + 1
    skill_training_time = round(skill_training_table[level]['time']) * 60
    skill_training_speed_skill = skill_training_time - ((skill_training_time / 100) * (char_characteristic[skill_name] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))
    skill_training_time_with_bonus = datetime.fromtimestamp(datetime.now().timestamp() + skill_training_speed_skill)
    char_characteristic['skill_training_time_end'] = skill_training_time_with_bonus
    char_characteristic['steps_today_used'] += apply_move_optimization_gym(skill_training_table[level]['steps'])
    char_characteristic['steps_total_used'] += apply_move_optimization_gym(skill_training_table[level]['steps'])
    char_characteristic['energy'] -= skill_training_table[level]['energy']
    char_characteristic['money'] -= skill_training_table[level]['money']

    print(f'\nüèãÔ∏è {skill_name.title()} - –ù–∞—á–∞—Ç–æ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞. üèã')
    print(f'–ù–∞ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ {skill_name} –ø–æ—Ç—Ä–∞—á–µ–Ω–æ:'
          f'\n- üèÉ: {apply_move_optimization_gym(skill_training_table[level]["steps"]):,.0f} steps'
          f'\n- üîã: {skill_training_table[level]["energy"]} —ç–Ω.'
          f'\n- üí∞: {skill_training_table[level]["money"]} $'
          f'\n- üïë –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞–≤—ã–∫–∞ —á–µ—Ä–µ–∑: {Fore.LIGHTBLUE_EX}{time(round(skill_training_table[level]["time"] - ((skill_training_table[level]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}{Style.RESET_ALL}')


def skill_training_check_done():
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –∏–∑—É—á–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
    global char_characteristic
    if debug_mode:
        if not char_characteristic['skill_training']:
            print('\n–ù–∞–≤—ã–∫–∏ –Ω–µ –∏–∑—É—á–∞—é—Ç—Å—è.')

    if char_characteristic['skill_training']:
        if datetime.fromtimestamp(datetime.now().timestamp()) >= char_characteristic['skill_training_time_end']:
            skill_name = char_characteristic['skill_training_name']
            char_characteristic[skill_name] += 1
            print(f'\nüèã –ù–∞–≤—ã–∫ {skill_name.title()} —É–ª—É—á—à–µ–Ω –¥–æ {char_characteristic[skill_name]}')
            char_characteristic['skill_training'] = False
            char_characteristic['skill_training_name'] = None
            char_characteristic['skill_training_timestamp'] = None
            char_characteristic['skill_training_time_end'] = None
            stamina_skill_bonus_def()
            save_characteristic()


class Skill_Training():
    # –ö–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∫–∞—á–∫–∏ –Ω–∞–≤—ã–∫–æ–≤
    def __init__(self, training, name, timestamp, time_end, time_stamp_now):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        self.training = training
        self.name = name
        self.timestamp = timestamp
        self.time_end = time_end
        self.timestamp_now = time_stamp_now

    def check_requirements(self):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–ª-–≤–∞ —à–∞–≥–æ–≤, —ç–Ω–µ—Ä–≥–∏–∏, –∏ –¥–µ–Ω–µ–≥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–∫–∞—á–∫–∏ –Ω–∞–≤—ã–∫–∞
        if char_characteristic['steps_can_use'] >= apply_move_optimization_gym(skill_training_table[char_characteristic[self.name] + 1]["steps"]) \
            and char_characteristic['energy'] >= skill_training_table[char_characteristic[self.name] + 1]["energy"]\
            and char_characteristic['money'] >= skill_training_table[char_characteristic[self.name] + 1]["money"]:
            print('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª-–≤–∞ —à–∞–≥–æ–≤, —ç–Ω–µ—Ä–≥–∏–∏ –∏ –¥–µ–Ω–µ–≥ - —É—Å–ø–µ—à–Ω–∞.')

            ### –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–ª–∏ –∑–¥–µ—Å—å –≤—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ò –≤—Å–µ –ª–∏ —Ö–æ—Ä–æ—à–æ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.
#            Skill_Training.start_skill_training(self)       # –ù–∞—á–∞–ª–æ –ø—Ä–æ–∫–∞—á–∫–∏ –Ω–∞–≤—ã–∫–∞, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.

            return True

        else:
            print(f'\n{Fore.RED}–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {Style.RESET_ALL}')
            if char_characteristic['steps_can_use'] <= apply_move_optimization_gym(skill_training_table[char_characteristic[self.name] + 1]["steps"]):
                print(f'\t- üèÉ: –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç - {skill_training_table[char_characteristic[self.name] + 1]["steps"] - char_characteristic["steps_can_use"]} —à–∞–≥–æ–≤.')
            if char_characteristic['energy'] <= skill_training_table[char_characteristic[self.name] + 1]["energy"]:
                print(f'\t- üîã: –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç - {skill_training_table[char_characteristic[self.name] + 1]["energy"] - char_characteristic["energy"]} —ç–Ω–µ—Ä–≥–∏–∏.')
            if char_characteristic['money'] <= skill_training_table[char_characteristic[self.name] + 1]["money"]:
                print(f'\t- üí∞: –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç - {skill_training_table[char_characteristic[self.name] + 1]["money"] - char_characteristic["money"]} money.')
            gym_menu()
            return False

    def start_skill_training(self):
        # –ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞
        skill_training_time = round(skill_training_table[char_characteristic[self.name] + 1]['time']) * 60
        skill_training_speed_skill = skill_training_time - ((skill_training_time / 100) * (char_characteristic[self.name] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))
        skill_training_time_with_bonus = datetime.fromtimestamp(datetime.now().timestamp() + skill_training_speed_skill)

        char_characteristic['skill_training'] = True
        char_characteristic['skill_training_name'] = self.name
        char_characteristic['skill_training_timestamp'] = datetime.now().timestamp()
        char_characteristic['skill_training_time_end'] = skill_training_time_with_bonus
        char_characteristic['steps_today_used'] += apply_move_optimization_gym(skill_training_table[char_characteristic[self.name] + 1]['steps'])
        char_characteristic['steps_total_used'] += apply_move_optimization_gym(skill_training_table[char_characteristic[self.name] + 1]['steps'])
        char_characteristic['energy'] -= skill_training_table[char_characteristic[self.name] + 1]['energy']
        char_characteristic['money'] -= skill_training_table[char_characteristic[self.name] + 1]['money']

        print(f'\nüèãÔ∏è {self.name.title()} - –ù–∞—á–∞—Ç–æ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞. üèã')
        print(f'–ù–∞ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ {self.name} –ø–æ—Ç—Ä–∞—á–µ–Ω–æ:'
              f'\n- üèÉ: {apply_move_optimization_gym(skill_training_table[char_characteristic[self.name] + 1]["steps"]):,.0f} steps'
              f'\n- üîã: {skill_training_table[char_characteristic[self.name] + 1]["energy"]} —ç–Ω.'
              f'\n- üí∞: {skill_training_table[char_characteristic[self.name] + 1]["money"]} $'
              f'\n- üïë –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞–≤—ã–∫–∞ —á–µ—Ä–µ–∑: {Fore.LIGHTBLUE_EX}{time(round(skill_training_table[char_characteristic[self.name] + 1]["time"] - ((skill_training_table[char_characteristic[self.name] + 1]["time"] / 100) * (char_characteristic["speed_skill"] + equipment_speed_skill_bonus() + char_characteristic["lvl_up_skill_speed"]))))}{Style.RESET_ALL}')
        return char_characteristic

    def stamina_skill_training(self):
        print(f'\n–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {Fore.GREEN}{char_characteristic["stamina"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.')
        print('\n–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å - –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å, –Ω–∞ 1 % –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —à–∞–≥–æ–≤ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –¥–Ω—è.')
        print(f'\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –¥–æ {Fore.GREEN}{char_characteristic["stamina"] + 1}{Style.RESET_ALL} —É—Ä–æ–≤–Ω—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_stamina}).')

    def enegry_max_skill_training(self):
        print(f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏: {Fore.GREEN}{char_characteristic["energy_max_skill"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.')
        print(f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏ - –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å, –¥–æ–±–∞–≤–ª—è–µ—Ç + 1 –µ–¥–∏–Ω–∏—Ü—É –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∑–∞–ø–∞—Å—É —ç–Ω–µ—Ä–≥–∏–∏.')
        print(f'\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_energy_max}).')

    def speed_skill_training(self):
        print(f'\n–°–∫–æ—Ä–æ—Å—Ç—å: {Fore.GREEN}{char_characteristic["speed_skill"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.')
        print(f'\n–°–∫–æ—Ä–æ—Å—Ç—å - –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–±–∞–≤–ª—è–µ—Ç + 1% –∫ –æ–±—â–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –í–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É, –ø—Ä–æ–∫–∞—á–∫—É –Ω–∞–≤—ã–∫–æ–≤, –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π.')
        print(f'\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_speed_skill}).')

    def luck_skill_training(self):
        print(f'\n–£–¥–∞—á–∞: {Fore.GREEN}{char_characteristic["luck_skill"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.')
        print(f'\n–£–¥–∞—á–∞ - –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —É–¥–∞—á–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ 1%. '
              f'\n–£–¥–∞—á–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∞ —Ç–∞–∫ –∂–µ –Ω–∞ –∏—Ö –∫–∞—á–µ—Å—Ç–≤–æ.'
              f'\n–¢–∞–∫ –∂–µ, —É–¥–∞—á–∞ –≤–ª–∏—è–µ—Ç –∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è.')
        print(f'\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_luck_skill}).')

    def move_optimization_adventure_skill_training(self):
        print(f'\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Adventure: {Fore.GREEN}{char_characteristic["move_optimization_adventure"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.'
              f'\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Adventure - –ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1 % –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.'
              f'\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_move_optimization_adventure})')

    def move_optimization_gym_skill_training(self):
        print(f"\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Gym: {Fore.GREEN}{char_characteristic['move_optimization_gym']}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å."
              f"\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Gym - –ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1 % –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
              f"\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_move_optimization_gym})")

    def move_optimization_work_skill_training(self):
        print(f"\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Work: {Fore.GREEN}{char_characteristic['move_optimization_work']}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å."
            f"\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π Work - –ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1 % –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
            f"\n–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ({lvl_up_move_optimization_work})")


Skill = Skill_Training(char_characteristic['skill_training'], char_characteristic['skill_training_name'],
                       char_characteristic['skill_training_timestamp'], char_characteristic['skill_training_time_end'],
                       datetime.now().timestamp())
