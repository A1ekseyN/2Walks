from datetime import datetime, timedelta
from characteristics import char_characteristic, skill_training_table, save_characteristic
from settings import debug_mode
from colorama import Fore, Style
from skill_bonus import stamina_skill_bonus, stamina_skill_bonus_def


def gym_menu():
    # –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –Ω–∞–≤—ã–∫–∞ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏.
    global char_characteristic

    print('\nüèã --- –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ª–æ–∫–∞—Ü–∏–∏ - –°–ø–æ—Ä—Ç–∑–∞–ª. --- üèã')
    print('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å: '
          f'\n\t1. –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å - {Fore.LIGHTCYAN_EX}{char_characteristic["stamina"] + 1}{Style.RESET_ALL} lvl. ('
                f'üèÉ: {Fore.LIGHTCYAN_EX}{skill_training_table[char_characteristic["stamina"] + 1]["steps"]}{Style.RESET_ALL}; '
                f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["stamina"] + 1]["energy"]}{Style.RESET_ALL} —ç–Ω.; '
                f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["stamina"] + 1]["money"]}{Style.RESET_ALL} $ '
                f'üïë: {Fore.LIGHTBLUE_EX}{skill_training_table[char_characteristic["stamina"] + 1]["time"]}{Style.RESET_ALL} –º–∏–Ω.).'
          f'\n\t2. Energy Max. - {Fore.LIGHTCYAN_EX}{char_characteristic["energy_max"] - 49}{Style.RESET_ALL} lvl. ('
                f'üèÉ: {Fore.LIGHTCYAN_EX}{skill_training_table[char_characteristic["energy_max"] - 49]["steps"]}{Style.RESET_ALL}; '
                f'üîã: {Fore.GREEN}{skill_training_table[char_characteristic["energy_max"] - 49]["energy"]}{Style.RESET_ALL} —ç–Ω.; '
                f'üí∞: {Fore.LIGHTYELLOW_EX}{skill_training_table[char_characteristic["energy_max"] - 49]["money"]}{Style.RESET_ALL} $; '
                f'üïë: {Fore.LIGHTBLUE_EX}{skill_training_table[char_characteristic["energy_max"] - 49]["time"]}{Style.RESET_ALL} –º–∏–Ω.).'
          '\n\t0. –ù–∞–∑–∞–¥.'
          )
    try:
        temp_number = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π –Ω–∞–≤—ã–∫ —É–ª—É—á—à–∏—Ç—å: \n>>> ')
    except:
        print('\n–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')
        gym_menu()

    if temp_number == '1':      # –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å
        stamina_skill_training()
    elif temp_number == '2':    # Energy max.
        Skill.enegry_max_skill_training()
        try:
            ask = input(f'\t1. –ü–æ–≤—ã—Å–∏—Ç—å –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ + 1, –¥–æ {char_characteristic["energy_max"] + char_characteristic["energy_max_skill"] + 1} —ç–Ω–µ—Ä–≥–∏–∏.'
                        f'\n\t0. –ù–∞–∑–∞–¥\n>>> ')
            if ask == '1':
                char_characteristic['skill_training_name'] = 'energy_max_skill'
                Start = Skill_Training(char_characteristic['skill_training'], char_characteristic['skill_training_name'], char_characteristic['skill_training_timestamp'], char_characteristic['skill_training_time_end'], datetime.now().timestamp())
                Start.start_skill_training()
#                Skill.start_skill_training()
            elif ask == '0':
                pass
        except:
            gym_menu()
    elif temp_number == '0':
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
        pass


def skill_training_check_done():
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –∏–∑—É—á–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
    global char_characteristic

    if debug_mode:
        if char_characteristic['skill_training'] == False:
            print('\n–ù–∞–≤—ã–∫–∏ –Ω–µ –∏–∑—É—á–∞—é—Ç—Å—è.')

    if char_characteristic['skill_training']:
        if datetime.fromtimestamp(datetime.now().timestamp()) >= char_characteristic['skill_training_time_end']:
            char_characteristic[char_characteristic['skill_training_name']] += 1
            print(f'\nüèã –ù–∞–≤—ã–∫ {char_characteristic["skill_training_name"].title()} —É–ª—É—á—à–µ–Ω –¥–æ {char_characteristic[char_characteristic["skill_training_name"]]}')
            char_characteristic['skill_training'] = False
            char_characteristic['skill_training_name'] = None
            char_characteristic['skill_training_timestamp'] = None
            char_characteristic['skill_training_time_end'] = None
            stamina_skill_bonus_def()
            save_characteristic()
            return char_characteristic


def stamina_skill_training():
    # –ü–æ–≤—ã—à–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏. 1 lvl + 1 % –∫ –æ–±—â–µ–º—É –∫–æ–ª-–≤—É –ø—Ä–æ–π–¥–µ–Ω—ã—Ö —à–∞–≥–æ–≤.
    global char_characteristic

    print(f'\n–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {Fore.GREEN}{char_characteristic["stamina"]}{Style.RESET_ALL} —É—Ä–æ–≤–µ–Ω—å.')
    print('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å - –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å, –Ω–∞ 1 % –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —à–∞–≥–æ–≤ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –¥–Ω—è.')

    try:
        ask = input(f'\t1. –ü–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞ –¥–æ - {char_characteristic["stamina"] + 1} —É—Ä–æ–≤–Ω—è.'
                    '\n\t0. –ù–∞–∑–∞–¥\n>>> ')
    except:
        print('\n–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')
        stamina_skill_training()

    if char_characteristic['skill_training']:
        print('\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –≤—ã —É–∂–µ –∏–∑—É—á–∞–µ—Ç–µ –Ω–∞–≤—ã–∫.')
    elif char_characteristic['skill_training'] == False:
        if ask == '1':
            if char_characteristic['steps_can_use'] >= (char_characteristic['stamina'] + 1) * 1000 and char_characteristic['energy'] >= (char_characteristic['stamina'] + 1) * 5 and char_characteristic['money'] >= (char_characteristic['stamina'] + 1) * 10:
                char_characteristic['skill_training'] = True
                char_characteristic['skill_training_name'] = 'stamina'
                char_characteristic['skill_training_timestamp'] = datetime.now().timestamp()
                char_characteristic['skill_training_time_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + timedelta(minutes=(skill_training_table[char_characteristic['stamina'] + 1]['time']))
                char_characteristic['steps_today_used'] += (char_characteristic['stamina'] + 1) * 1000
                char_characteristic['energy'] -= (char_characteristic['stamina'] + 1) * 5
                char_characteristic['money'] -= (char_characteristic['stamina'] + 1) * 10
                print('\nüèãÔ∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å - –ù–∞—á–∞—Ç–æ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞.')
                print(f'üïë –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞–≤—ã–∫–∞ —á–µ—Ä–µ–∑: {char_characteristic["skill_training_time_end"] - datetime.fromtimestamp(datetime.now().timestamp())}.')
                return char_characteristic
            else:
                print('\n--- –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –Ω–∞–≤—ã–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. ---\n–î–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞, –≤–∞–º –Ω—É–∂–Ω–æ:')
                if char_characteristic['steps_can_use'] <= (char_characteristic['stamina'] + 1) * 1000:
                    print(f'\n- –®–∞–≥–∏ üèÉ: {char_characteristic["steps_can_use"]} - –ù—É–∂–Ω–æ üèÉ: {(char_characteristic["stamina"] + 1) * 1000}.', end='')
                if char_characteristic['energy'] <= (char_characteristic['stamina'] + 1) * 5:
                    print(f'\n- –≠–Ω–µ—Ä–≥–∏—è üîã: {char_characteristic["energy"]} - –ù—É–∂–Ω–æ üîã: {(char_characteristic["stamina"] + 1) * 5}.', end='')
                if char_characteristic['money'] <= (char_characteristic['stamina'] + 1) * 10:
                    print(f'\n- Money üí∞: {char_characteristic["money"]} - –ù—É–∂–Ω–æ üí∞: {(char_characteristic["stamina"] + 1) * 10}.')
        elif ask == '0':
            # –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
            pass


def energy_max_skill_training():
    # –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ –º–∞–∫—Å. —ç–Ω–µ—Ä–≥–∏–∏.
    pass


class Skill_Training():
    # –ö–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã

    def __init__(self, training, name, timestamp, time_end, time_stamp_now):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        self.training = training
        self.name = name
        self.timestamp = timestamp
        self.time_end = time_end
        self.timestamp_now = time_stamp_now

    def start_skill_training(self):
        # –ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞
        print(f'\n--- Start skill training Class. ---')
        char_characteristic['skill_training'] = True
        print('Check')
        char_characteristic['skill_training_name'] = self.name
        print('Check')
        char_characteristic['skill_training_timestamp'] = datetime.now().timestamp()
        print('Check')
        print(self.name)
        char_characteristic['skill_training_time_end'] = datetime.fromtimestamp(datetime.now().timestamp()) + timedelta(minutes=(skill_training_table[char_characteristic[self.name] + 1]['time']))
        print('Check')
        char_characteristic['steps_today_used'] += (char_characteristic[self.name] + 1) * 1000
        print('Check')
        char_characteristic['energy'] -= (char_characteristic[self.name] + 1) * 5
        print('Check')
        char_characteristic['money'] -= (char_characteristic[self.name] + 1) * 10
        print('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ start_skill_training')

        print(char_characteristic['skill_training_name'])
        print(char_characteristic['skill_training_timestamp'])
        print(char_characteristic['skill_training_time_end'])
        print(char_characteristic['steps_today_used'])
        print(char_characteristic['energy'])


        print(f'\nüèãÔ∏è {self.name.title()} - –ù–∞—á–∞—Ç–æ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞.')
        print(f'üïë –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞–≤—ã–∫–∞ —á–µ—Ä–µ–∑: {char_characteristic["skill_training_time_end"] - datetime.fromtimestamp(datetime.now().timestamp())}.')
        return char_characteristic

    def check(self):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª-–≤–∞ —à–∞–≥–æ–≤, —ç–Ω–µ—Ä–≥–∏–∏, –∏ –¥–µ–Ω–µ–≥.
        pass

    def stamina_skill_training(self):
        pass

    def enegry_max_skill_training(self):
        print(f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏ - –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ—Ç + 1 —ç–¥–∏–Ω–∏—Ü—É –∫ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∑–∞–ø–∞—Å—É —ç–Ω–µ—Ä–≥–∏–∏.'
              f'\n–£—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞ {self.name}: {char_characteristic[self.name]}')
#              f'\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏: {char_characteristic["energy_max"] + char_characteristic[self.name]}.')


Skill = Skill_Training(char_characteristic['skill_training'], char_characteristic['skill_training_name'],
                       char_characteristic['skill_training_timestamp'], char_characteristic['skill_training_time_end'], datetime.now().timestamp())
